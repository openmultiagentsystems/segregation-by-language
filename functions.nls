;
; Checks which words an agent
; can learn and add its list of words
;
to-report add [agent_words neighbor_words]
  let new_words filter [x -> not member? x agent_words] neighbor_words
  if not empty? new_words [
    set agent_words lput (one-of new_words) agent_words
  ]

  report agent_words
end

;
; check if an agent already knows all words from another group
;
to-report check-learned-words [agent_words neighbor_words]
  let po filter [x -> not member? x agent_words] neighbor_words
  if not empty? po [
    report true
  ]
  
  report false
end

;
; returns the difficulty based on the agent's color
;
to-report get-difficulty [agent-color]
  let difficulty 0
  
  if agent-color = red [
    set difficulty red-agents-difficulty
  ]
  
  if agent-color = blue [
    set difficulty blue-agents-difficulty
  ]
  
  if agent-color = yellow [
    set difficulty yellow-agents-difficulty
  ]
  
  report difficulty
end

; 
; output to commander controlled by the UI
;
to logmsg [msg]
  if should-show [
    show (word msg)
  ]
end